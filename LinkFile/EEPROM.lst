C51 COMPILER V9.59.0.0   EEPROM                                                            04/25/2019 14:08:00 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\bin\EEPROM.obj
COMPILER INVOKED BY: G:\Keil_v5\C51\BIN\C51.EXE globalManager\EEPROM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\LinkFile\EEPROM.lst) TABS(2) OBJECT(.\bin\EEPROM.obj)

line level    source

   1          #include "EEPROM.h"
   2          /**********打开ISP/IAP功能**************/   
   3          void ISP_IAP_Enable(void)
   4          {
   5   1          EA = 0;  //关中断  
   6   1          ISP_CONTR = ISP_CONTR & 0x18;  
   7   1          ISP_CONTR = ISP_CONTR | WaitTime; // 设置等待时间
   8   1          ISP_CONTR = ISP_CONTR | 0x80;   //允许ISP/IAP操作
   9   1      }
  10           
  11          /**********关闭ISP/IAP功能**************/   
  12          void ISP_IAP_Disable(void)
  13          {
  14   1         ISP_CONTR = ISP_CONTR & 0x7f; //禁止ISP/IAP操作
  15   1           ISP_CMD = 0x00;    //去除ISP/IAP命令
  16   1         ISP_TRIG = 0x00;   //防止ISP/IAP命令无触发
  17   1         EA   =   1;        // 开中断 
  18   1      }
  19           
  20          /**********触发ISP/IAP**************/  
  21          void ISPTrig(void)
  22          {
  23   1         ISP_TRIG = 0x46;  //先送46h，再送B9h到ISP/IAP触发寄存器，每次都需如此
  24   1         ISP_TRIG = 0xb9;  //送完B9h后，ISP/IAP命令立即被触发启动
  25   1         _nop_();
  26   1      }
  27           
  28          /**********字节读**************/
  29          unsigned char byte_read(unsigned int byte_addr)
  30          {
  31   1           unsigned char  dat = 0;    //读EEPROM数据缓存
  32   1       
  33   1         EA = 0;     //关中断
  34   1         ISP_ADDRH = (unsigned char)(byte_addr >> 8);     //送地址高字节
  35   1         ISP_ADDRL = (unsigned char)(byte_addr & 0x00ff); //送地址低字节
  36   1           ISP_IAP_Enable();             //打开ISP/IAP功能
  37   1         ISP_CMD   = ISP_CMD & 0xf8;   //清除ISP_CMD寄存器低3位
  38   1         ISP_CMD   = ISP_CMD | RdCommand; //写入读数据命令 
  39   1         ISPTrig();                //触发ISP/IAP
  40   1         dat = ISP_DATA;           //将ISP_DATA寄存器中的数据保存起来
  41   1           ISP_IAP_Disable();        //关闭ISP/IAP功能 
  42   1         EA  = 1;           //使能中断
  43   1         return dat;        //返回读到的数据
  44   1      }
  45           
  46          /**********字节写**************/
  47          void byte_write(unsigned int byte_addr,unsigned char Orig_data)
  48          {
  49   1         EA  = 0;  //关中断
  50   1         ISP_ADDRH = (unsigned char)(byte_addr >> 8);       //送地址高字节
  51   1         ISP_ADDRL = (unsigned char)(byte_addr & 0x00ff);   //送地址低字节
  52   1         ISP_IAP_Enable();                   //打开ISP/IAP功能
  53   1           ISP_CMD  = ISP_CMD & 0xf8;         //清除ISP_CMD寄存器低3位
  54   1         ISP_CMD  = ISP_CMD | PrgCommand;   //写入写数据命令 
C51 COMPILER V9.59.0.0   EEPROM                                                            04/25/2019 14:08:00 PAGE 2   

  55   1         ISP_DATA = Orig_data;      //写入数据到ISP_DATA寄存器
  56   1         ISPTrig();                //触发ISP/IAP
  57   1         ISP_IAP_Disable();        //关闭ISP/IAP功能 
  58   1         EA =1;            //使能中断
  59   1      }
  60          /**********扇区擦除**************/
  61          void SectorErase(unsigned int sector_addr)
  62          {
  63   1         EA = 0;   
  64   1         ISP_ADDRH = (unsigned char)(sector_addr >> 8);        //送擦除地址高字节
  65   1         ISP_ADDRL = (unsigned char)(sector_addr & 0x00ff);    //送擦除地址低字节
  66   1         ISP_IAP_Enable(); 
  67   1           ISP_CMD = ISP_CMD & 0xf8;           //清除ISP_CMD寄存器低3位
  68   1         ISP_CMD = ISP_CMD | EraseCommand;   //写入擦除数据命令
  69   1         ISPTrig();       //触发ISP/IAP
  70   1         ISP_IAP_Disable();    //关闭ISP/IAP功能 
  71   1       
  72   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    114    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
