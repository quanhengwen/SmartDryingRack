C51 COMPILER V9.59.0.0   GLOBALMANAGER                                                     04/25/2019 11:25:36 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE GLOBALMANAGER
OBJECT MODULE PLACED IN .\bin\globalManager.obj
COMPILER INVOKED BY: G:\Keil_v5\C51\BIN\C51.EXE globalManager\globalManager.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEN
                    -D PRINT(.\LinkFile\globalManager.lst) TABS(2) OBJECT(.\bin\globalManager.obj)

line level    source

   1          #include "globalManager.h"
   2          //全局管理全局对象
   3          static  GlobalManager this;
   4          static  SensorValue   globalSensorValue;
   5          /**
   6           * @brief 上电的时候初始化整个单片机所有的参数函数
   7           */
   8          void g_initSystemParameter()
   9          {
  10   1          //定时器中断初始化
  11   1          interrupt1Init();
  12   1          //初始化串口
  13   1          uartInit();
  14   1          //函数的初始化
  15   1          this.controlMotor1StatusFunc=controlMotor1Status;
  16   1          this.controlMotor2StatusFunc=controlMotor2Status;
  17   1          this.handleSensorDataFunc=handleSensorData; 
  18   1          this.handleSendSmsInfoFunc=handleSendSmsInfo;
  19   1          this.handleControlMagnetFunc=handleControlMagnet;
  20   1      }
  21          const GlobalManager g_getGlobalManagerObj()
  22          {
  23   1        return this;
  24   1      }
  25          static const bool controlMotor1Status(const MotorStatus status)
  26          {
  27   1          switch(status){
  28   2            case Move_Up:               //正转
  29   2              Motor1ControlTurn(true,MOTOR1CIRCLENUMBER);
  30   2                    //todo把记录写入EEPROM
  31   2              return true;
  32   2            case Move_Down:              //反转
  33   2              Motor1ControlTurn(false,MOTOR1CIRCLENUMBER);
  34   2                    //todo把记录写入EEPROM
  35   2              return true;
  36   2            case Move_Stop:             //停止
  37   2              Motor1ControlStop();
  38   2              return true;
  39   2            default:
  40   2              return false;
  41   2          } 
  42   1      }
  43          static const bool controlMotor2Status(const MotorStatus status)
  44          {
  45   1          switch(status){
  46   2            case Move_Up:               //正转
  47   2              Motor2ControlTurn(true,MOTOR2CIRCLENUMBER);
  48   2              return true;
  49   2            case Move_Down:              //反转
  50   2              Motor2ControlTurn(false,MOTOR2CIRCLENUMBER);
  51   2              return true;
  52   2            case Move_Stop:             //停止
  53   2              Motor2ControlStop();
  54   2              return true;
C51 COMPILER V9.59.0.0   GLOBALMANAGER                                                     04/25/2019 11:25:36 PAGE 2   

  55   2            default:
  56   2              return false;
  57   2          } 
  58   1      }
  59          const bool handleSensorData(void)
  60          {
  61   1          DHT11Data dh11Data;
  62   1          memset(&dh11Data,0,sizeof(DHT11Data));
  63   1          memset(&globalSensorValue,0,sizeof(SensorValue));
  64   1          globalSensorValue.PhotosensitiveValue=getAdcValue(Channel1);//获取光敏传感器的数值(未转换公式)
  65   1          globalSensorValue.RaindropValue=getAdcValue(Channel2);//获取雨滴传感器的数值(未转换公式)
  66   1          globalSensorValue.WindSpeedValue=getAdcValue(Channel3);//获取风速传感器的数值(未转换公式)
  67   1          dh11Data=DHT11_receive();
  68   1          globalSensorValue.TemperatureValue=dh11Data.TH;//温度值
  69   1          globalSensorValue.HumidityValue=dh11Data.RH;//湿度值
  70   1          //以下仅用于测试发送到串口看是否正确
  71   1          sendThresholdToPhone(&dh11Data.RH);//湿度值 
  72   1          sendThresholdToPhone(&dh11Data.TH); //温度值
  73   1          handleSensorDataAnalysis(); 
  74   1          return true;
  75   1      }
  76          static const bool handleSensorDataAnalysis(void)
  77          {
  78   1          bool  isSendSmsInfo=false;
  79   1        isSendSmsInfo=globalSensorValue.PhotosensitiveValue>=PhotosensitiveThreshold?true:false;
  80   1        isSendSmsInfo=globalSensorValue.RaindropValue>=RaindropThreshold?true:false;
  81   1        isSendSmsInfo=globalSensorValue.WindSpeedValue>=WindSpeedThreshold?true:false;
  82   1        isSendSmsInfo=globalSensorValue.TemperatureValue>=TemperatureThreshold?true:false;
  83   1        isSendSmsInfo=globalSensorValue.HumidityValue>=HumidityThreshold?true:false;
  84   1        if(isSendSmsInfo){//发送温湿度短信
  85   2          handleSendSmsInfo();
  86   2        }
  87   1        return true;
  88   1      }
  89          static const bool handleSendSmsInfo(void)
  90          {
  91   1        //todo发送gsm的信息
  92   1        uint8_t xdata sendSmsBuff[50];
  93   1        memset(sendSmsBuff,0,sizeof(uint8_t)*50);
  94   1        sprintf(sendSmsBuff,"Light:%d,Rain:%d,Wind:%d,Temp:%d,Hum:%d",globalSensorValue.PhotosensitiveValue\
  95   1                                                                      ,globalSensorValue.RaindropValue\
  96   1                                                                      ,globalSensorValue.WindSpeedValue\
  97   1                                                                      ,globalSensorValue.TemperatureValue\
  98   1                                                                      ,globalSensorValue.HumidityValue);
  99   1        sendThresholdToPhone(sendSmsBuff);
 100   1        return true;
 101   1      }
 102          void g_delay(const uint32_t one_10us)
 103          {
 104   1        if(!one_10us)
 105   1          return;
 106   1        g_EndCount=one_10us;
 107   1        g_CurrentCount=0;
 108   1        forever{
 109   2          if(g_CurrentCount>=g_EndCount)
 110   2            break;
 111   2        }
 112   1      }
 113          static void  interrupt1Init()
 114          {
 115   1        EA = OPEN;
 116   1        TMOD = 0x11;
C51 COMPILER V9.59.0.0   GLOBALMANAGER                                                     04/25/2019 11:25:36 PAGE 3   

 117   1        ET0 = OPEN;
 118   1        //10 us
 119   1        TH0=(65536-10)/256;
 120   1        TL0=(65536-10)%256;
 121   1        TR0=OPEN;
 122   1      }
 123          static void  uartInit()
 124          {
 125   1        //设置9600的波特率
 126   1      #ifdef RATE12
 127   1          RCAP2L=0xD9;
 128   1          RCAP2H=0xFF;
 129   1          T2CON=0x34;
 130   1          SCON=0x50;
 131   1          ES=OPEN;
 132   1          EA=OPEN;
 133   1      #else
                  PCON &= 0x7F;
                  SCON = 0x50;
                  TMOD &= 0x0F; 
                  TMOD |= 0x20;
                  TL1 = 0xFD;
                  TH1 = 0xFD;
                  ET1 = 0;
                  TR1 = OPEN; 
                  ES  = OPEN;
              #endif
 144   1      }
 145          static const bool handleControlMagnet(const bool isOpen)
 146          {
 147   1        //电磁铁控制开关
 148   1        if(isOpen){
 149   2            MagnetSwitch=OPEN;//高电平开
 150   2        }else{
 151   2            MagnetSwitch=CLOSE; //低电平关闭    
 152   2        }
 153   1        return true;
 154   1      }
 155          /*******************************************************************************
 156          * 函 数 名         : timeout
 157          * 函数功能       :定时器中断触发
 158          * 输    入         : 无
 159          * 输    出         : 无
 160          *******************************************************************************/
 161          void timeout(void) interrupt 1
 162          {
 163   1        //10 us
 164   1        TH0=(65536-10)/256;
 165   1        TL0=(65536-10)%256;
 166   1      
 167   1        g_CurrentCount++;
 168   1        ADC_CLOCK=~ADC_CLOCK;//给adc模块发送方波
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    479    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =   ----      50
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       2
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   GLOBALMANAGER                                                     04/25/2019 11:25:36 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
